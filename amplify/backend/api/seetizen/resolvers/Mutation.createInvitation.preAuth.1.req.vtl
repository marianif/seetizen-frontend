## [Start] Merge default values and inputs. **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
$util.qr($mergedValues.putAll($util.defaultIfNull($ctx.args.input, {})))
## [End] Merge default values and inputs. **
## [Start] Validate create mutation for @index 'byProposer'. **
#set( $hasSeenSomeKeyArg = false )
#set( $keyFieldNames = ["startsAt", "eventId"] )
#foreach( $keyFieldName in $keyFieldNames )
#if( $mergedValues.containsKey("$keyFieldName") ) #set( $hasSeenSomeKeyArg = true ) #end
#end
#foreach( $keyFieldName in $keyFieldNames )
  #if( $hasSeenSomeKeyArg && !$mergedValues.containsKey("$keyFieldName") )
    $util.error("When creating any part of the composite sort key for @index 'byProposer', you must provide all fields for the key. Missing key: '$keyFieldName'.")
  #end
#end
## [End] Validate create mutation for @index 'byProposer'. **
#if( $util.isNull($ctx.stash.metadata.dynamodbNameOverrideMap) )
  $util.qr($ctx.stash.metadata.put("dynamodbNameOverrideMap", {
  "startsAt#eventId": "startsAtEventId"
}))
#else
  $util.qr($ctx.stash.metadata.dynamodbNameOverrideMap.put("startsAt#eventId", "startsAtEventId"))
#end
#if( $hasSeenSomeKeyArg )
  $util.qr($ctx.args.input.put("startsAt#eventId","${mergedValues.startsAt}#${mergedValues.eventId}"))
#end
{}