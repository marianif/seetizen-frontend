## [Start] Set query expression for key **
#if( $util.isNull($ctx.args.followedId) && !$util.isNull($ctx.args.sortDirection) )
  $util.error("When providing argument 'sortDirection' you must also provide argument 'followedId'.", "InvalidArgumentsError")
#end
#set( $modelQueryExpression = {} )
## [Start] Validate key arguments. **
#if( !$util.isNull($ctx.args.followerId) && $util.isNull($ctx.args.followedId) )
  $util.error("When providing argument 'followerId' you must also provide arguments followedId", "InvalidArgumentsError")
#end
## [End] Validate key arguments. **
#if( !$util.isNull($ctx.args.followedId) )
  #set( $modelQueryExpression.expression = "#followedId = :followedId" )
  #set( $modelQueryExpression.expressionNames = {
  "#followedId": "followedId"
} )
  #set( $modelQueryExpression.expressionValues = {
  ":followedId": {
      "S": "$ctx.args.followedId"
  }
} )
#end
## [Start] Applying Key Condition **
#if( !$util.isNull($ctx.args.followerId) && !$util.isNull($ctx.args.followerId.beginsWith) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND begins_with(#sortKey, :sortKey)" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "followerId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.followerId.beginsWith" }))
#end
#if( !$util.isNull($ctx.args.followerId) && !$util.isNull($ctx.args.followerId.between) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey BETWEEN :sortKey0 AND :sortKey1" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "followerId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey0", { "S": "$ctx.args.followerId.between[0]" }))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey1", { "S": "$ctx.args.followerId.between[1]" }))
#end
#if( !$util.isNull($ctx.args.followerId) && !$util.isNull($ctx.args.followerId.eq) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey = :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "followerId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.followerId.eq" }))
#end
#if( !$util.isNull($ctx.args.followerId) && !$util.isNull($ctx.args.followerId.lt) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey < :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "followerId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.followerId.lt" }))
#end
#if( !$util.isNull($ctx.args.followerId) && !$util.isNull($ctx.args.followerId.le) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey <= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "followerId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.followerId.le" }))
#end
#if( !$util.isNull($ctx.args.followerId) && !$util.isNull($ctx.args.followerId.gt) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey > :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "followerId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.followerId.gt" }))
#end
#if( !$util.isNull($ctx.args.followerId) && !$util.isNull($ctx.args.followerId.ge) )
  #set( $modelQueryExpression.expression = "$modelQueryExpression.expression AND #sortKey >= :sortKey" )
  $util.qr($modelQueryExpression.expressionNames.put("#sortKey", "followerId"))
  $util.qr($modelQueryExpression.expressionValues.put(":sortKey", { "S": "$ctx.args.followerId.ge" }))
#end
## [End] Applying Key Condition **
## [End] Set query expression for key **
$util.qr($ctx.stash.put("modelQueryExpression", $modelQueryExpression))
{}